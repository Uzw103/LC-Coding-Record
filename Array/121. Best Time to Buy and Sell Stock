'''
    1. DP思想 首先确定基态 dp[i]表示当前已遍历数组的最大profit
    2. 状态转移方程：先保存当前数组中最小的 再由当前元素-最小的 与之前保存的最大的值比较 取更大的
    3. 遍历完数组 返回最大profit即可
'''



class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        if len(prices) < 1:
            return 0
        min_profit, max_profit = prices[0], 0
        for i in range(len(prices)):
            min_profit = min(min_profit, prices[i])
            max_profit = max(max_profit, prices[i]-min_profit)
        return max_profit
