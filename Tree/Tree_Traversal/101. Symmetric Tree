#
# @lc app=leetcode id=101 lang=python3
#
# [101] Symmetric Tree
#
'''
      1. 主要是递归思想 递归的点：判断二叉树的左右子树是否对称相等 因此创建函数时传进来的就是左右结点
      2. 使用DFS 找到递归终止的条件是：二叉树全遍历完/左右子节点个数不同/左右子节点值不相等
      3. 判断完终止条件后 即可开始递归
'''

# @lc code=start
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:
        if not root:
            return True
        def dfs(left, right):
            if not left and not right:
                return True
            elif not left or not right:
                return False
            elif left.val != right.val:
                return False
            return dfs(left.left, right.right) and dfs(left.right, right.left)
        return dfs(root.left, root.right)
