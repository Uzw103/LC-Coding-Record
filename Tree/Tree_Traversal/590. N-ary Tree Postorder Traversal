#
# @lc app=leetcode id=590 lang=python3
#
# [590] N-ary Tree Postorder Traversal
#
'''
    1. children是一个列表，这个列表保存了其所有节点。
    2. 后序遍历的输出顺序为左-右-根，所以可以以根-右-左入栈，最后将返回的列表翻转即可
    3. 注意children的appen方式

# @lc code=start
"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

class Solution:
    def postorder(self, root: 'Node') -> List[int]:
        if not root:
            return []
        res = []
        stack = [root]
        while stack:
            node = stack.pop()
            if node.children:
                stack.extend(node.children)
            res.append(node.val)
        return res[::-1]

