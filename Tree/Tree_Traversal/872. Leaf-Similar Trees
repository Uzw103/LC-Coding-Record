# @lc app=leetcode id=863 lang=python3
#
# [872] Leaf-Similar Trees
#
'''
      1. 使用DFS获得最深叶子结点的值 结构与普通二叉树inorder相同 唯一改变的就是append叶子结点要做一下判断再append 不能直接append
            2. 调用量词dfs来分别生成两个树的叶子结点 直接返回时判断是否相等即可
'''


# @lc code=start
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def leafSimilar(self, root1: TreeNode, root2: TreeNode) -> bool:
        if not root1 or not root2:
            return False
        def inorder(node):
            res, stack, node = [], [], root

​            while node or stack:
​                while node:
​                    stack.append(node)
​                    node = node.left
​                node = stack.pop()
​                if not node.left and not node.right:
​                    res.append(node.val)
​                node = node.right
​            return res
​        return inorder(root1) == inorder(root2)
​           