#
# @lc app=leetcode id=107 lang=python3
#
# [107] Binary Tree Level Order Traversal II
#
’‘’
      1. 107是从下到上返回每一层的结点值（从左到右的顺序）
      2. 102是正序二叉树的层次遍历
      3. 二叉树的BFS ——使用队列——创建临时保存每层结点值的列表——遍历完一起append
'''
      
# @lc code=start
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrderBottom(self, root: TreeNode) -> List[List[int]]:
        if not root:
            return []
        from collections import deque
        res, queue = [], deque([root])
        while queue:
            level_val = []
            for _ in range(len(queue)):
                node = queue.popleft()
                level_val.append(node.val)
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            res.append(level_val)
        return res[::-1]
