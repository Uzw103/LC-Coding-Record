#
# @lc app=leetcode id=814 lang=python3
#
# [814] Binary Tree Pruning
#
'''
        1. 这是一个从叶子结点 不断向上判断是否值为1/0的后序遍历
        2. 与1325：删除指定值得叶子结点相同，一个是删除值为target的结点，一个是删除左右子树均不含1的子树
        3. 1325的关键是判断是否是叶子结点，因此要左右结点均不存在才删除；814是判断有无值为1的子树，即如果有子树则这一子树都不删除
        4. 还是Postorder
'''

# @lc code=start
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pruneTree(self, root: TreeNode) -> TreeNode:
        if not root:
            return None
        root.left = pruneTree(root.left)
        root.right = pruneTree(root.right)
        if root.val == 0 and not root.left and not root.right:
            return None
        return root
            
