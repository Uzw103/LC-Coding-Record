#
# @lc app=leetcode id=1325 lang=python3
#
# [1325] Delete Leaves With a Given Value
#

'''
        1. 使用Postorder（DFS）找到叶子结点先
        2. 之后判断是否=target，如果是则去除该结点返回none. 如果到了叶子结点并且=target时，当前叶子结点是root.left，因此返回none即去除root的left子结点，
        3. 如果不=target，则继续返回该结点
        4. 回溯：如果root的left和right都不存在了，直接判断root是否=target，等于就return None也删掉
'''

# @lc code=start
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def removeLeafNodes(self, root: TreeNode, target: int) -> TreeNode:
        if not root:
            return None
        root.left = self.removeLeafNodes(root.left, target)
        root.right = self.removeLeafNodes(root.right, target)
        if not root.left and not root.right and root.val == target:
            return None
        return root
