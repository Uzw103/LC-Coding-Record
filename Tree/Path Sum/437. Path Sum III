#
# @lc app=leetcode id=437 lang=python3
#
# [437] Path Sum III
#
'''
        1. 首先是暴力搜索法，自顶向下
        2. 优化方法是：使用前缀+回溯法 利用字典记录
# @lc code=start
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.path_num = 0

    def pathSum(self, root: TreeNode, sum: int) -> int:
        if not root:
            return self.path_num
        self.pathSum(root.left, sum)
        self.pathSum(root.right, sum)
        self.getPath(root, sum)
        return self.path_num
        
    def getPath(root, sum):
        if not root:
            return 
        if root.val == sum:
            self.path_num += 1
        self.getPath(root.left, sum - root.val)
        self.getPath(root.right, sum - root.val)
