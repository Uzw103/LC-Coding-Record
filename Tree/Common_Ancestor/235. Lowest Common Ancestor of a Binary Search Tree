#
# @lc app=leetcode id=235 lang=python3
#
# [235] Lowest Common Ancestor of a Binary Search Tree
#
'''
          1. 二叉搜索树的性质：当前结点和p q值进行比较 看看p q在哪条子树上
          2. 合并了236的思想，如果p q分别出现在左右子树、或者当前节点=p或q，直接返回root即可
          3. 使用迭代方法，往下判断root的左右子结点是否满足上面的条件
'''
# @lc code=start
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        while root:
            # if not root:
            #     return None
            if root.val < p.val and root.val < q.val:
                root = root.right
            elif root.val > p.val and root.val > q.val:
                root = root.left
            else:
                return root #这里是p和q分别位于左右两边子树或者当前root=q或p时 直接返回root值
